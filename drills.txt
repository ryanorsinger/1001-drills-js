# Data types
true
false
2.1
"Hi, everybody!"
undefined
null
NaN

# Basic Math operators
4 - 2
10 / 5
100 * 3
11 - 7
10 - (-2)
Infinity + 1
Infinity - 1
0.2 + 0.1 (this one is worth some research)
"Hello" / 5
"Icecream" * 10
("cat" * 3) + "Bread"
("cat" * 3) + ("dog" * 3) + ("lizard" * 4) + " BATMAN!"

# Using the Not boolean operator
!true
!!true
!false
!!false
!5.32
!-12
!5
!!5
!0
!!0
!"banana"
!!"banana"
!undefined
!!undefined
null
!null
!!null
!""
!!""
!(true || false)
!(false && true)

# Boolean Operators (AND and OR)
true && true
false && true
true && false
false && false
true && (true && false)
false && (true && true)
true || true
true || false
false || true
false || false
true || (false && false)
false || (true || false)
false || false || false || false || false || true
true && true && true && true && false

# Typeof operator
typeof true
typeof false
typeof !!false
typeof 0
typeof 3.141
typeof "3.141"
typeof "Howdy, ya'll!"
typeof (3 + 3)
typeof "3" + 3
typeof ("3" + 3)
typeof 5
typeof "5"
typeof 5 === typeof "5"
typeof (5 === 5)
typeof true
typeof typeof boolean
typeof "banana"
typeof typeof "banana"
typeof 5.23
typepof typeof 5.23

# Comparisson operators (===, ==, !=, !==, >, <, >=, <=)
99 === 99
2 === 2.0
2 == "2"
2 === "2"
2 === 2.0
4 !== 2
true === true
false === false
true === false
false === true
typeof (true === true)
typeof true === "boolean"
typeof false === "boolean"
typeof 23 === "number"
typeof "banana" === "string"
(11 - 3) === 7
"Hello" === "Hello"
typeof "Howdy" === typeof "Howdy"
5 === "5"
5 == "5"
5 !== "5"
5 != "5"
10 > 2
"23" > 42
20 >= 20
5 < 10
"Hello" != "World"
undefined == null
undefined === null
"" == false
"" === false
typeof "banana"
typeof true === tyepof "banana"
true === 1
true == 1
false === 0
false == 0
5 === 5
5 == 5
5 = 5
2 != "2"
2 !== "2"
2 != 2
2 !== 2
undefined == false
undefined === false
null == false
null === false
0 == false
0 === false
"" == false
"" === false
"" == 0
"" === 0
"code" == 1
"code" === 1
"banana" == true
"banana" === true
"banana" != true
"banana" !== true

# Concatenation
"Hello, " + "World!"
"H" + "e" + "l" + "l" + "o"
2 + 2
2 + "2"
2 + "2.3"
2 + parseFloat("2.3")

# Prototype Constructors 
Boolean("banana")
!Boolean("banana")
Boolean("")
Boolean("     ")
Boolean(1)
Boolean(Infinity)
Boolean(0)
Boolean(undefined)
Boolean(null)
Boolean(NaN)
String(23)
String(true)
String(false)
String(null)
Number("icecream")
Number("23")
Number(false)
Number(null)
Number(undefined)
Number(true)

# Variable declaration 
var favoriteFood
typeof favoriteFood
var someNumber
typeof someNumber
someNumber == undefined
favoriteFood == undefined

# Variable assignment and comparisson
var courseName = "Codeup"
courseName == "Codeup"
courseName == "codeup"
courseName == "Code" + "Up"
var today = "Tuesday"
today == "Tuesday"
today == "tuesday"


# Variable reassignment
var number = 5
typeof number
number = 23
number == 23
number = "banana"
typeof number

var favoriteNumber = 5;
favoriteNumber;
favoriteNumber === "5";
favoriteNumber == "5";
favoriteNumber == 23;
(favoriteNumber == 5 || favoriteNumber == 23)
favoriteNumber = 23;
favoriteNumber;

# Variable reassignment (as an accumulator)
var total = 0;
var appetizer = 3;
var mainDish = 7;
var dessert = 3;
total = appetizer
total
total = mainDish
total
total = dessert
total = 0;
total = appetizer + mainDish + dessert;
total
total = 0;
total += appetizer;
total = total + appetizer;
total
total += mainDish;
total
total += dessert;







Make a variable called rightHereNow and assign it the value of true.
Make a variable called onTheMoon and assign it the value of false.
rightHereNow && onTheMoon
rightHereNow || onTheMoon
const myName = "";  //
myName === "Bob"
myName = "Bob"
myName.toUpperCase()
myName.toLowerCase()
myName
myName = myName.toUpperCase();
var shoutMyName = myName.toUpperCase();
shoutMyName;
var favoriteNumber; // assign this your favorite number.
var greeting = "Hi";
var name = "Put your name in quotes"
greeting + name
greeting + " " + name
var isLoggedIn = true;
var isAuthor = false;
var isAdmin = true;
var canMakeEdits = isLoggedIn && (isAuthor || isAdmin)
canMakeEdits
isLoggedIn = false;
canMakeEdits
canMakeEdits = isLoggedIn && (isAuthor || isAdmin)
var favoriteColor;
console.log(favoriteColor);
favoriteColor = "" // add your favorite color in the string
favoriteColor == "green";
(favoriteColor == "green" || favoriteColor == "blue" || favoriteColor == "red")

document.body.innerHTML = "";
document.title = "Welcome to 1001 Drills";
document.body.innerHTML = "<h1>Howdy</h1>";
document.body.innerHTML += "<br>";
document.body.innerHTML += "<hr>";
document.body.innerHTML += "<input type='text' name='input' id='input' placeholder='input' autofocus>";
document.body.innerHTML += "<br>";
document.body.innerHTML += "<textarea name='solution' id='solution' placeholder='Solution'></textarea>";
document.body.innerHTML += "<br>";
document.body.innerHTML += '<textarea name="output" id="output" placeholder="output"></textarea>';
Make a variable named firstName that holds a string of your first name.
Make a variable named lastName that holds a string of your last name.
Make a variable named fullName that is a combination of your firstName + " " + lastName
Make a variable name nickName that holds a string of your nickname. If you've never had a nickname, then store your first name in the nickName variable.
Make a variable named superHero that holds a string of your favorite super hero.
Make a variable named superVillain that holds a string of a popular villain.
total
Make a variable named dayOfTheWeek that holds the name of the day.
Make a date variable called today that holds an object representing today's date.
Make a variable named favoriteNumber that holds your favoriteNumber.
Make a variable named myBirthday that holds a string of your birthday
Make a variable named myCompleteBirthday that holds a date object of your birthdate
Make a variable named favoriteBook that holds a string of your favorite book.
Make a variable named favoriteFood that holds a string of your favorite food or dish.
Make a variable named favoriteBeverage that holds a string of your favorite beverage.
Make a variable named favoriteColor that holds your favorite color as a string.
Make a variable named favoriteBand that holds a string of your favorite band's name.
Make a variable named favoriteSong and assign it a string of your favorite song.
Make a variable named colorNames that holds an array of 'roygbiv' colors as strings
Make a variable named arrayOfChores that holds an array of strings, each being a common chore.
Make a variable named trashDay that holds the day of the week you put out the trash.
Make a variable named recycleDay that holds the day of the week you put out the recycles.
functions w/ no conditionals or loops:
Make a function named sayHello(name) that returns "Hi " + name.
Write a function named capitalize(string) that takes a string of any capitalization and uppercases the first character and lowercases the rest of the characters of a string.
Write a function named upperCase(string)
Make a function named identity(input) that returns the input exactly as provided.
Make a function named isOdd(number)
Make a function named hasOdds(array)
Make a function named isEven(number)
Make a function named hasEvens(array)
Make a function named isPositive(number)
Make a function named hasPositives(array)
Make a function named isNegative(number)
Make a function named hasNegatives(array)
Make a function named isBoolean(input)
Make a function named hasBooleans(array)
Make a function named isTrue(boolean)
Make a function named isFalse(boolean)
Make a function named isTruthy(input)
Make a function named isFalsy(input)
Make a function named isVowel(letter)
Make a function named hasVowels(string) that uses isVowel to check if a string has any vowels
Make a function named isConsonant(letter)
Make a function named hasConsonants(string) 
Make a function named isCapital(letter)
Make a function named hasCapitalLetters(string) that returns if a string has any capitals.
Make a function named isLowerCase(letter)
Make a function named hasLowerCase(string) that returns if a string has any lower cased
Make a function named isSpace(letter) that returns if a character is a space character
Make a function named hasSpaces(string) that returns if a string has any space characters
Make a function named isZero(number)
Make a function named notZero(input) that returns true if..
Make a function named increment(number) that returns a number plus one
Make a function named decrement(number) that returns a number minus one
Make a function named isFive(input)
Make a function named addFive(input) that adds five to some input.
Make a function named isMultipleOfFive(input)
Make a function named isThree(input)
Make a function named isMultipleOfThree(input)
Make a function named isMultipleOfThreeAndFive(input)
Make a function named isMultipleOf(target, n) which checks if target is evenly divisible by n
Add a method to the number prototype called .isMultipleOf(n) that returns if the number is evenly divisible by n.
Write a function named lowerCase(string)
Write a function named capitalizeEachWord(string) uses capitalize to return a string where each new word (separated by a space) is capitalized.
Write a function named double(n) that returns a number times two
Write a function named triple(n) that returns a number times 3
Write a function named quadruple(n) that returns a number times 4
Write a function named half(n) that returns 1/2 of the provided input
Write a function named add(a, b) that returns the sum of a and b
Write a function named subtract(a, b) that returns a minus b
Write a function named multiply(a, b) that returns the product of a times b
Write a function named divide(a, b) that returns a divided by b
Write a function named remainder(a, b) that returns the remainder after dividing a by b
Make a function named modulo(a, b)
Write a function named square(n) that returns n multiplied by n
Write a function named cube(n) that returns n * n * n
Write a function named squareRoot(n) that returns the square root of the input
Write a function named cubeRoot(n) that returns the cube root of the input
Write a function named average(arrayOfNumbers) that returns the average of an array of numbers and numeric strings.
Write a function named median(arrayOfNumbers) that returns the median of a set of numbers.
Write a function named mode(arrayOfNumbers) that returns the most frequently occurring number in the set.
Write a function named invertSign(number) that returns a negative version of a postive number, a positve version of negative, and false for all else.
Write a function named sine(number) that returns false or the sine of a number 
Write a function named cosine(number)
Write a function named tangent(number)
Write a function named arcsine()
Write a function named arccosine()
Write a function named cotangent()
Write a function named degreesToRadians(number)
Write a function named radiansToDegrees(number)
Make a function named sumOfSquares(a, b) that returns a*a + b*b
Make a function named isBlank(input) that determines if a given input is spaces, newline characters, or tabs.
Make a function named isNumeric(input) returns true/false if the input is a number or numeric string
Make a function named trim(string) that removes empty spaces before and after the input. 
Make a functio named highestNumber(a, b, c) that takes in 3 numbers and returns the highest.
Write a function named lowerCaseAll(arrayOfStrings)
Write a function named upperCaseAll(arrayOfStrings)
Write a function named sayHiJane(name) that says "Hi Jane if the input is Jane or jane, otherwise "Hi"
Write a function named sayHiBob(name) that only says "Hi Bob" if the input is "Bob", otherwise "Hi"
Write a function named capitalizeAll(arrayOfStrings)
Write a function called yellVowels(string) that returns the string w/ vowels capitalized
Write a function called yellConsolants(string) that returns the string w/ capitalized consonants
Make a function named isTodayTrashDay(trashDay) that uses trashDay and compares to today's day.
Make a function named isTodayRecycleDay(trashDay) that uses recycleDay to return if it's the day or not.
Make a function named allSubstrings(string) generates all combinations of a string. 'dog' produces ['d','o','do','g','dg','og','dog']
Make a function named isTodayFriday() that returns if today is Friday or not.
Make a function named isWeekend(day) that returns if the provided input is on a weekend
Make a function named isWeekday(day) that returns if the provided input is on a weekday
Make a function named isTodayAWeekend(day) that returns if today is Saturday or Sunday
Make a function named isTodayAWeekday(day) that returns if today is Mon-Fri
Make a function named areEqual(input1, input2) that returns if both inputs have the same value
Make a function named areIdentical(input1, input2) that returns if both inputs are same value and data type.
Make a function named not(input) returns the input with a flipped boolean
Make a function named notNot(input) that the negation of the negation of the input.
Make a function named and(predicate1, predicate2) that returns the logical operation of AND
Make a function named or(predicate1, predicate2) that returns the logical operation of OR
Make a function named isFibonacci(number)
Make a function named getNthFibonacci(n)
Make a function named isPrime(number)
Make a function named getNthPrime(number)


Write a function called reverseString(string) that reverses a string
Write a function called reverseArray(array) that returns the array in reverse order
Write a function called reverseNumber(number) that returns the numerals in reverse order
Write a function named reverse(input) that returns the reverse of any input.
Maka a function named getHypotenus(a, b) that returns the sqrt of a*a + b*b
Make a function named firstString(input) that returns the first word in a string, separated by space characters.
Make a function named firstCharacter(string) that returns the first character of a string
Make a function named firstElement(array) that returns the first element of an array
Make a function named firstNumeral(number) that returns the first numeral of a number.
Make a function named first(input) that returns the first of whatever datatype passed.
Make a function named secondString(string) that returns the second character of a string
Make a function named secondElement(array) that returns the second element of an array
Make a function named secondNumber(number) that returns the second numeral of a number.
Make a function named second(input) that returns the second string, element, numeral.


Make a function named restOfString(string) that returns every character except the first.
Make a function named restOfArray(array) that returns the array with first removed.
Make a function named restOfNumber(number) that returns numerals with the first removed.
Make a function named rest(input) that returns the rest of the input w/ the first removed
Make a function named lastString(string) that returns the last character of a string
Make a function named lastElement(array) that returns the last element of an array
Make a function named lastNumber(number) that returns the last numeral of a number.
Make a function named last(input) that returns the last string, element, numeral.
Make a function named penultimateString(string) that returns the penultimate character of a string
Make a function named penultimateElement(array) that returns the penultimate element of an array
Make a function named penultimateNumber(number) that returns the penultimate numeral of a number
Make a function named penultimate(input) the penultimate from the input (string, number, array)
Make a function named getRandomFromString(string) that returns the random character of a string
Make a function named getRandomFromArray(array) that returns the random element of an array
Make a function named getRandomFromNumber(number) that returns the random numeral of a number
Make a function named getRandomFromObject(object) that returns a random member
Make a function named getRandomFrom(anyInput) that returns a call to the appropriate "getRandomFrom" function.
To the string prototype, add a .random() method that returns a random character
To the array prototype, add a .random() method that returns a random element
To the object prototype, add a .random() method that returns a random member's value or key/value
Make a function named absoluteValue(number) that returns the absolute value of a number.

Make a function named isBinary(number) that returns if the input is a binary expression.
Make a function named toBinary(number) that takes in any number and returns the binary representation
Make a function named isHex(number) that returns if a number is a hexidecimal expression.
Make a function named toHex(number) that converts a numeric expression to Hex or returns NaN.
Make a function named randomColor() that returns a random color name.
Make a function named randomHexColor() that returns a random Hex color
Make a function named randomNumber() that returns 
Make a function named randomIntIncluding(min, max)
Make a function named randomIntExcluding(min, max)
Make a function named isArrayOfNumbers(input)
Make a function named isArrayOfStrings(input)
Make a function named isArrayOfArrays(input)
Make a function named isArrayOfObjects(input)
Make a function named isMatrix(input)
Make a function named rotateMatrixClockwise(input)...
Make a function named addOneToAll(arrayOfNumbers)
Make a function named isBlackJack(number) that returns if a number is 21
Make a function named getEvens(arrayOfNumbers) that returns only the even values
Make a function named countEvens(arrayOfNumbers) that returns a count of the number of even values.
Make a function named getOdd(arrayOfNumbers) that returns only the odd values
Make a function named countOdds(arrayOfNumbers) that returns a count of the number of odd values.
Make a function named countZeros(arrayOfNumbers) that returns a count of the number of zeros in a number array.
Make a function named getMultiplesFrom(n, arrayOfNumbers) that returns an array containing only multiples of n from an array of numbers
Make a function named isString(input)
Make a function named isArrayOfNumbers(input)
Make a function named isArrayOfStrings(input)
Make a function named isArrayOfArrays(input)
Make a function named isArrayOfObjects()
Make a function named flatten(input) that flattens nested arrays
Make a function named alphabeticalSortString(string)
Make a function named alphabeticalSortString(arrayOfStrings)
Make a function named reverseAlphabeticalSortString(string)
Make a function named reverseAlphabeticalArrayOfStrings(arrayOfStrings)
Make a function named frequencies(stringOrArray) that returns an object representing the frequency count of each member (character or element value)
Make a function named shuffleString(string)
Make a function named shuffleNumber(number)
Make a function named shuffleArray(array)
Make a function named shuffle(input) that returns the shuffled input (array, spring, number)
Make a funciton named swapCase(string) that swaps the case of each letter.
Make a function named count(stringOrArray) that returns the number of elements or letters.
Make a function named isArray(input) that returns whether or not the input is strictly an array
Make a function named canVote(birthdate) that takes in a birthdate variable and returns true or false if now() - birthdate is greater than or equal to 18
Make a function named isPalindrome(string) that determines if a given string is a palindrome or not
Make a function named generatePalindrome(length) that takes in length as an input and returns a randomly generated palindrome
Make a function named getLongestWordFromString(string)
Make a function named getLongestStringFromArray(arrayOfStrings)
Make a function named getLongest(input) that returns the longest word from a string or string from an array of strings.
Make a function named getVowelCount(string)
Make a function named getConsonantCount(string)
Make a function named getType(input) that returns the right data type (array should return 'Array')
Make a function named min(input) that returns the lowest value from an array
Make a function named max(input) that returns the highest value from an array
Make a function named isPerfect(number)
Make a function named amountToCoins(input) that returns the number of coins to make up the input
Make a function named getUniqueCharactersFromString(string) returns only unique characters from a string
Make a function named getUniqueNumbersFromString(string) returns an array of the unique numbers in a string ex. "abc123" returns "123"
Make a function named getUniqueStringsFromString(string)
Make a function named getUniqueNumbersFromArray(array)
Make a function named getUniqueStringsFromArray(array)
Make a function named getUniqueArraysFromArray(array)
Make a function named getUnique(input) that returns only the unique values from any input.
Make a function named sumAll(arrayOfNumbers) that returns the sum of all the numbers in an array
Make a function named multiplyAll(arrayOfNumbers) that returns the product of all the numbers in an array
Make a function named range(x, y) to get the integers in range

Make a function named stringToArray(string) that turns a string with spaces into an array of strings
Make a function named camelCase(string) that returns a string converted to camelCase
Make a function named studlyCase(string) that returns a string converted to StudlyCase
Make a function named snakeCase(string) that returns a string converted to snake_case
Make a function named repeat(string, times) that returns a string repeated a given number of times
Make a function named humanizeNumber(number) that returns 1st, 2nd, 83rd, etc...

Make a function named flatten(array) that flattends a nested list
Make a function named getPositionInString(string, target)
Make a function named getPositionInArray(string, target)
Make a function named getPosition(input)
Make a function named compressString() that eliminates only consecutive duplicates on a string. Example (1, 1, 2, 2, 1, 1, 3, 3, 4, 4) becomes (1, 2, 1, 3, 4)
Make a function named compressArray(array)
Make a function named compress(input)
Make a function called pack() that returns consecutive duplicates of list elements into sublists. Example [1, 1, 1, 2, 2, 3, 4, 4, 5, 2, 2] becomes [[1,1,1], [2, 2], [4, 4], [2, 2]]
Make a function named join(set1, set2) that returns the intersection of set1 and set2
Make a function named coinFlip() that randomly returns true or false
Make a function named sixSidedDie() that randomly returns 1-6
Make a function named twentySidedDie() thtat randomly returns 1-20
Make a function named yatsi() that rolls 6d6 dice....
Make a function named craps() that returns the roll of 2d6
Make a function named isWholeNumber(input) that returns true if the number is whole
Make a function named isRationalNumber(input) that returns true if the number is rational
Make a function named isScalar(input) that returns true/false if the input is a scalar value or not.
Make a function named hasDecimal(input) that returns true/false if the input has any decimal values or not.
Make a function named isArrayOfScalars(input) that returns true if there provided input is an array of scalar values.
Make a function named firstIndexOfCharacter(character, string) that returns the index of a character of a string
Make a function named firstIndexOfElement(element, array) that returns the index of an element of an array
Make a function named firstIndexOfNumeral(numeral, number) that returns the index of numeral of a number
Make a function named firstIndexOf(needle, haystack)
Make a function named secondIndexOfCharacter(character, string) that returns the index of a character of a string
Make a function named secondIndexOfElement(element, array) that returns the index of an element of an array
Make a function named secondIndexOfNumeral(numeral, number) that returns the index of numeral of a number
Make a function named secondIndexOf(needle, haystack)
Make a function named lastIndexOfCharacter(string) that returns the index of a character of a string
Make a function named lastIndexOfElement(array) that returns the index of an element of an array
Make a function named lastIndexOfNumeral(number) that returns the index of numeral of a number
Make a function named lastIndexOf(needle, haystack)
Make a function named nullOrUndefined(input) that returns true only when the input is null or undefined
Make a function named keys(object) that returns an array of an object's properties, in the same order
Make a function named vals(object) that returns an array of an object's values, in the same order
Extend the string prototype to have a map method
Extend the string prototype to have a filter method
Extend the string prototype to have a reduce method
Create a multiplication function without the * operator (Hint: a loop might be helpful).
Create a multiplication function called recursiveMultiplication that doesn't use a loop.
Create a dividde method without the / operator (Hint: a loop might be helpful).
Write a function that takes in an array of objects where each object has an item property and a cost property as a string with a $ and commas in it. The function shoul output the sum up all the expenses
Write a function that takes in an array of objects where each object has an item property and a cost property as a string with a $ and commas in it. The function shoul output the average cost of each expense
Make a function named estimatePi(precision) which returns PI up to a given number of places
Make a function named decimalToPercent(decimalNumber) that returns a format like "99%"
Make a function named percentToDecimal(number) that takes in "11%" and returns .11
Make a function named numberToRomanNumeral(integer) that returns a number in Roman notation.
Make a function named romanNumeralToNumber()
Make a function named getKey(value, object) that returns the corresponding key of a given object when provided a value.
Add a .getKey() method to the object prototype that returns the key of the given value.
Make a function called arrayToString(array, delimeter) that takes in an array and a delimeter and returns a string
Make a function called stringToArray(stringInput, delimeter) that takes in the string input, the delimeter, and returns an array of the elements

Make a function named daysBetween(start, end)
Make a function named weekdaysBetween(start, end)
